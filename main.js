!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button-disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t,r)=>{(e=>e.some(e=>!e.validity.valid))(e)?o(t,r):n(t,r)},o=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},n=(e,t)=>{e.classList.remove(t.inactiveButtonClass),e.disabled=!1},a=(e,o)=>{const n=Array.from(e.querySelectorAll(o.inputSelector)),a=e.querySelector(o.submitButtonSelector);n.forEach(r=>{t(e,r,o)}),r(n,a,o)},s=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}addCard({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)})}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)})}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)})}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)})}editAvatarInfo(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)})}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)})}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)})}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"2f9191da-7536-419d-b800-c3b88c13a750","Content-Type":"application/json"}}),l=document.querySelector(".profile__edit-button"),c=document.querySelector("#edit-profile-modal"),i=document.forms["profile-form"],d=c.querySelector("#profile-name-input"),u=c.querySelector("#profile-description-input"),m=document.querySelector("#avatar-modal"),_=m.querySelector(".modal__form"),h=m.querySelector("#profile-avatar-input"),f=(m.querySelector(".modal__submit-button"),document.querySelector(".profile__avatar-image")),v=document.querySelector(".profile__avatar-btn"),y=document.querySelector("#delete-modal"),S=document.querySelector("#delete-form"),p=document.querySelector(".profile__new-post-button"),b=document.querySelector("#new-post-modal"),q=b.querySelector(".modal__form"),E=b.querySelector("#card-image-input"),k=b.querySelector("#card-caption-input"),C=document.querySelector(".profile__name"),L=document.querySelector(".profile__description"),$=document.querySelector("#preview-modal"),g=$.querySelector(".modal__image"),j=$.querySelector(".modal__caption"),x=document.querySelector("#card-template").content.querySelector(".card"),U=document.querySelector(".cards__list");let P,A;function I(e,t="prepend"){const r=function(e){const t=x.cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-button"),a=t.querySelector(".card__delete-button");return o.src=e.link,o.alt=e.name,r.textContent=e.name,n.addEventListener("click",()=>{n.classList.contains("card__like-button_active")?s.unlikeCard(e._id).then(e=>{n.classList.remove("card__like-button_active")}).catch(console.error):s.likeCard(e._id).then(e=>{n.classList.add("card__like-button_active")}).catch(console.error)}),a.addEventListener("click",()=>{P=t,A=e._id,function(e,t){D(y);const r=S.querySelector(".modal__submit-button"),o=n=>{n.preventDefault(),r.textContent="Deleting...",s.deleteCard(t).then(()=>{e.remove(),H(y)}).catch(console.error).finally(()=>{r.textContent="Delete",S.removeEventListener("submit",o)})};S.addEventListener("submit",o,{once:!0}),y.querySelector(".modal__cancel-button").addEventListener("click",()=>{H(y)})}(t,e._id)}),o.addEventListener("click",()=>{g.src=e.link,g.alt=e.name,j.textContent=e.name,D($)}),t}(e);U[t](r)}function D(e){function t(t){"Escape"===t.key&&H(e)}function r(t){t.target===e&&H(e)}e.classList.add("modal_is-opened"),e.addEventListener("click",r),document.addEventListener("keydown",t),e._escHandler=t,e._overlayHandler=r}function H(t){t.classList.remove("modal_is-opened");const r=t.querySelector(".modal__form");r&&a(r,e),t._escHandler&&document.removeEventListener("keydown",t._escHandler),t._overlayHandler&&t.removeEventListener("click",t._overlayHandler)}var T;s.getAppInfo().then(([e,t])=>{e.forEach(e=>I(e,"append")),C.textContent=t.name,L.textContent=t.about}).catch(console.error),document.querySelectorAll(".modal__close-button").forEach(e=>{const t=e.closest(".modal");e.addEventListener("click",()=>H(t))}),l.addEventListener("click",()=>{d.value=C.textContent,u.value=L.textContent,D(c)}),i.addEventListener("submit",e=>{e.preventDefault(),s.editUserInfo({name:d.value,about:u.value}).then(e=>{C.textContent=e.name,L.textContent=e.about,H(c)}).catch(console.error)}),v.addEventListener("click",()=>{D(m)}),_.addEventListener("submit",function(e){e.preventDefault();const t=_.querySelector(".modal__submit-button");t.textContent="Saving...",s.editAvatarInfo(h.value).then(e=>{f.src=e.avatar,f.alt=e.name,H(m)}).catch(console.error).finally(()=>{t.textContent="Save"})}),p.addEventListener("click",()=>D(b)),q.addEventListener("submit",t=>{t.preventDefault();const r=q.querySelector(".modal__submit-button");r.textContent="Saving...";const o={name:k.value,link:E.value};s.addCard(o).then(t=>{I(t,"prepend"),a(q,e),H(b)}).catch(console.error).finally(()=>{r.textContent="Save"})}),T=e,document.querySelectorAll(T.formSelector).forEach(e=>{((e,o)=>{const n=Array.from(e.querySelectorAll(o.inputSelector)),a=e.querySelector(o.submitButtonSelector);r(n,a,o),n.forEach(s=>{s.addEventListener("input",()=>{((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(o.inputErrorClass)})(e,r,r.validationMessage,o)})(e,s,o),r(n,a,o)})})})(e,T)})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFJRixFQUFhRyxZQUVDQyxZQUFjcUksRUFDbEN6SSxFQUFhSyxVQUFVWSxJQUFJaEIsRUFBT0wsa0JBYWhDNEksQ0FDRXpJLEVBQ0FDLEVBQ0FBLEVBQWEwSSxrQkFDYnpJLElBdUNBc0ksQ0FBbUJ4SSxFQUFhQyxFQUFjQyxHQUM5Q00sRUFBa0JDLEVBQVdDLEVBQWVSLFFBUTlDcUksQ0FBa0J2SSxFQUFhRSxJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy9zY3JpcHRzL3ZhbGlkYXRpb24uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X3Nwb3RzLy4vc3JjL3V0aWxzL0FwaS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdmFsaWRhdGlvbkNvbmZpZyA9IHtcbiAgZm9ybVNlbGVjdG9yOiBcIi5tb2RhbF9fZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19zdWJtaXQtYnV0dG9uXCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX3N1Ym1pdC1idXR0b24tZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIixcbn07XG5cbmNvbnN0IHNob3dJbnB1dEVycm9yID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSwgY29uZmlnKSA9PiB7XG4gIGNvbnN0IGVycm9yTWVzc2FnZUVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgIGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxuICApO1xuICBlcnJvck1lc3NhZ2VFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xuICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZChjb25maWcuaW5wdXRFcnJvckNsYXNzKTtcbn07XG5cbmNvbnN0IGhpZGVJbnB1dEVycm9yID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGNvbmZpZykgPT4ge1xuICBjb25zdCBlcnJvck1lc3NhZ2VFbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICBgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcbiAgKTtcbiAgZXJyb3JNZXNzYWdlRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG4gIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGNvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xufTtcblxuY29uc3QgY2hlY2tJbnB1dFZhbGlkaXR5ID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGNvbmZpZykgPT4ge1xuICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xuICAgIHNob3dJbnB1dEVycm9yKFxuICAgICAgZm9ybUVsZW1lbnQsXG4gICAgICBpbnB1dEVsZW1lbnQsXG4gICAgICBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UsXG4gICAgICBjb25maWdcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIGhpZGVJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGNvbmZpZyk7XG4gIH1cbn07XG5cbmNvbnN0IGhhc0ludmFsaWRJbnB1dCA9IChpbnB1dExpc3QpID0+IHtcbiAgcmV0dXJuIGlucHV0TGlzdC5zb21lKChpbnB1dCkgPT4gIWlucHV0LnZhbGlkaXR5LnZhbGlkKTtcbn07XG5cbmNvbnN0IHRvZ2dsZUJ1dHRvblN0YXRlID0gKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCwgY29uZmlnKSA9PiB7XG4gIGlmIChoYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSkge1xuICAgIGRpc2FibGVCdXR0b24oYnV0dG9uRWxlbWVudCwgY29uZmlnKTtcbiAgfSBlbHNlIHtcbiAgICBlbmFibGVCdXR0b24oYnV0dG9uRWxlbWVudCwgY29uZmlnKTtcbiAgfVxufTtcblxuY29uc3QgZGlzYWJsZUJ1dHRvbiA9IChidXR0b25FbGVtZW50LCBjb25maWcpID0+IHtcbiAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKGNvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XG59O1xuXG5jb25zdCBlbmFibGVCdXR0b24gPSAoYnV0dG9uRWxlbWVudCwgY29uZmlnKSA9PiB7XG4gIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gIGJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcbn07XG5cbmNvbnN0IHNldEV2ZW50TGlzdGVuZXJzID0gKGZvcm1FbGVtZW50LCBjb25maWcpID0+IHtcbiAgY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcbiAgICBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKGNvbmZpZy5pbnB1dFNlbGVjdG9yKVxuICApO1xuICBjb25zdCBidXR0b25FbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcihjb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuXG4gIHRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCwgY29uZmlnKTtcblxuICBpbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICBjaGVja0lucHV0VmFsaWRpdHkoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCwgY29uZmlnKTtcbiAgICAgIHRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCwgY29uZmlnKTtcbiAgICB9KTtcbiAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgZW5hYmxlVmFsaWRhdGlvbiA9IChjb25maWcpID0+IHtcbiAgY29uc3QgZm9ybUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGNvbmZpZy5mb3JtU2VsZWN0b3IpO1xuICBmb3JtTGlzdC5mb3JFYWNoKChmb3JtRWxlbWVudCkgPT4ge1xuICAgIHNldEV2ZW50TGlzdGVuZXJzKGZvcm1FbGVtZW50LCBjb25maWcpO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCByZXNldEZvcm1WYWxpZGF0aW9uID0gKGZvcm1FbGVtZW50LCBjb25maWcpID0+IHtcbiAgY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcbiAgICBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKGNvbmZpZy5pbnB1dFNlbGVjdG9yKVxuICApO1xuICBjb25zdCBidXR0b25FbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcihjb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuXG4gIGlucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICBoaWRlSW5wdXRFcnJvcihmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBjb25maWcpO1xuICB9KTtcblxuICB0b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQsIGNvbmZpZyk7XG59O1xuXG4vL2V4cG9ydCB7IGVuYWJsZVZhbGlkYXRpb24sIHZhbGlkYXRpb25Db25maWcsIHJlc2V0Rm9ybVZhbGlkYXRpb24gfTtcbiIsImltcG9ydCBcIi4vaW5kZXguY3NzXCI7XG5pbXBvcnQge1xuICBlbmFibGVWYWxpZGF0aW9uLFxuICB2YWxpZGF0aW9uQ29uZmlnLFxuICByZXNldEZvcm1WYWxpZGF0aW9uLFxufSBmcm9tIFwiLi4vc2NyaXB0cy92YWxpZGF0aW9uLmpzXCI7XG5cbmltcG9ydCBBcGkgZnJvbSBcIi4uL3V0aWxzL0FwaS5qc1wiO1xuXG5jb25zdCBpbml0aWFsQ2FyZHMgPSBbXG4gIHtcbiAgICBuYW1lOiBcIkdvbGRlbiBHYXRlIEJyaWRnZVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9zcG90cy83LXBob3RvLWJ5LWdyaWZmaW4td29vbGRyaWRnZS1mcm9tLXBleGVscy5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiVmFsIFRob3JlbnNcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvc3BvdHMvMS1waG90by1ieS1tb3JpdHotZmVsZG1hbm4tZnJvbS1wZXhlbHMuanBnXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIlJlc3RhdXJhbnQgdGVycmFjZVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9zcG90cy8yLXBob3RvLWJ5LWNlaWxpbmUtZnJvbS1wZXhlbHMuanBnXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkFuIG91dGRvb3IgY2FmZVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9zcG90cy8zLXBob3RvLWJ5LXR1YmFudXItZG9nYW4tZnJvbS1wZXhlbHMuanBnXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkEgdmVyeSBsb25nIGJyaWRnZSwgb3ZlciB0aGUgZm9yZXN0IGFuZCB0aHJvdWdoIHRoZSB0cmVlc1wiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9zcG90cy80LXBob3RvLWJ5LW1hdXJpY2UtbGFzY2hldC1mcm9tLXBleGVscy5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiVHVubmVsIHdpdGggbW9ybmluZyBsaWdodFwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9zcG90cy81LXBob3RvLWJ5LXZhbi1hbmgtbmd1eWVuLWZyb20tcGV4ZWxzLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJNb3VudGFpbiBob3VzZVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9zcG90cy82LXBob3RvLWJ5LW1vcml0ei1mZWxkbWFubi1mcm9tLXBleGVscy5qcGdcIixcbiAgfSxcbl07XG5cbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCIsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiBcIjJmOTE5MWRhLTc1MzYtNDE5ZC1iODAwLWMzYjg4YzEzYTc1MFwiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICB9LFxufSk7XG5cbmNvbnN0IGVkaXRQcm9maWxlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19lZGl0LWJ1dHRvblwiKTtcbmNvbnN0IGVkaXRQcm9maWxlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXQtcHJvZmlsZS1tb2RhbFwiKTtcbmNvbnN0IGVkaXRQcm9maWxlRm9ybSA9IGRvY3VtZW50LmZvcm1zW1wicHJvZmlsZS1mb3JtXCJdO1xuY29uc3QgZWRpdFByb2ZpbGVOYW1lSW5wdXQgPSBlZGl0UHJvZmlsZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXG4gIFwiI3Byb2ZpbGUtbmFtZS1pbnB1dFwiXG4pO1xuY29uc3QgZWRpdFByb2ZpbGVEZXNjcmlwdGlvbklucHV0ID0gZWRpdFByb2ZpbGVNb2RhbC5xdWVyeVNlbGVjdG9yKFxuICBcIiNwcm9maWxlLWRlc2NyaXB0aW9uLWlucHV0XCJcbik7XG5cbmNvbnN0IGF2YXRhck1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItbW9kYWxcIik7XG5jb25zdCBhdmF0YXJGb3JtID0gYXZhdGFyTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcbmNvbnN0IGF2YXRhcklucHV0ID0gYXZhdGFyTW9kYWwucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWF2YXRhci1pbnB1dFwiKTtcbmNvbnN0IGF2YXRhclN1Ym1pdEJ1dHRvbiA9IGF2YXRhck1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3N1Ym1pdC1idXR0b25cIik7XG5jb25zdCBhdmF0YXJJbWFnZUVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXItaW1hZ2VcIik7XG5jb25zdCBhdmF0YXJNb2RhbEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyLWJ0blwiKTtcblxuY29uc3QgZGVsZXRlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RlbGV0ZS1tb2RhbFwiKTtcbmNvbnN0IGRlbGV0ZUZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RlbGV0ZS1mb3JtXCIpO1xuXG5jb25zdCBuZXdQb3N0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19uZXctcG9zdC1idXR0b25cIik7XG5jb25zdCBuZXdQb3N0TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI25ldy1wb3N0LW1vZGFsXCIpO1xuY29uc3QgbmV3UG9zdEZvcm0gPSBuZXdQb3N0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcbmNvbnN0IG5ld1Bvc3RUaXRsZUlucHV0ID0gbmV3UG9zdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC1pbWFnZS1pbnB1dFwiKTtcbmNvbnN0IG5ld1Bvc3REZXNjcmlwdGlvbklucHV0ID0gbmV3UG9zdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXG4gIFwiI2NhcmQtY2FwdGlvbi1pbnB1dFwiXG4pO1xuXG5jb25zdCBwcm9maWxlTmFtZUVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19uYW1lXCIpO1xuY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIpO1xuXG5jb25zdCBwcmV2aWV3TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3ByZXZpZXctbW9kYWxcIik7XG5jb25zdCBwcmV2aWV3SW1hZ2VFbCA9IHByZXZpZXdNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbWFnZVwiKTtcbmNvbnN0IHByZXZpZXdDYXB0aW9uRWwgPSBwcmV2aWV3TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2FwdGlvblwiKTtcblxuY29uc3QgY2FyZFRlbXBsYXRlID0gZG9jdW1lbnRcbiAgLnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC10ZW1wbGF0ZVwiKVxuICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIik7XG5jb25zdCBjYXJkc0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpO1xuXG5sZXQgc2VsZWN0ZWRDYXJkO1xubGV0IHNlbGVjdGVkQ2FyZElkO1xuXG5hcGlcbiAgLmdldEFwcEluZm8oKVxuICAudGhlbigoW2NhcmRzLCB1c2VySW5mb10pID0+IHtcbiAgICBjYXJkcy5mb3JFYWNoKChpdGVtKSA9PiByZW5kZXJDYXJkKGl0ZW0sIFwiYXBwZW5kXCIpKTtcbiAgICBwcm9maWxlTmFtZUVsLnRleHRDb250ZW50ID0gdXNlckluZm8ubmFtZTtcbiAgICBwcm9maWxlRGVzY3JpcHRpb25FbC50ZXh0Q29udGVudCA9IHVzZXJJbmZvLmFib3V0O1xuICB9KVxuICAuY2F0Y2goY29uc29sZS5lcnJvcik7XG5cbmZ1bmN0aW9uIGdldENhcmRFbGVtZW50KGRhdGEpIHtcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkVGVtcGxhdGUuY2xvbmVOb2RlKHRydWUpO1xuICBjb25zdCBjYXJkVGl0bGVFbCA9IGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdGl0bGVcIik7XG4gIGNvbnN0IGNhcmRJbWFnZUVsID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcbiAgY29uc3QgbGlrZUJ1dHRvbiA9IGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIik7XG4gIGNvbnN0IGRlbGV0ZUJ1dHRvbiA9IGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fZGVsZXRlLWJ1dHRvblwiKTtcblxuICBjYXJkSW1hZ2VFbC5zcmMgPSBkYXRhLmxpbms7XG4gIGNhcmRJbWFnZUVsLmFsdCA9IGRhdGEubmFtZTtcbiAgY2FyZFRpdGxlRWwudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG5cbiAgbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGlmIChsaWtlQnV0dG9uLmNsYXNzTGlzdC5jb250YWlucyhcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKSkge1xuICAgICAgYXBpXG4gICAgICAgIC51bmxpa2VDYXJkKGRhdGEuX2lkKVxuICAgICAgICAudGhlbigodXBkYXRlZENhcmQpID0+IHtcbiAgICAgICAgICBsaWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpXG4gICAgICAgIC5saWtlQ2FyZChkYXRhLl9pZClcbiAgICAgICAgLnRoZW4oKHVwZGF0ZWRDYXJkKSA9PiB7XG4gICAgICAgICAgbGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goY29uc29sZS5lcnJvcik7XG4gICAgfVxuICB9KTtcblxuICBkZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBzZWxlY3RlZENhcmQgPSBjYXJkRWxlbWVudDtcbiAgICBzZWxlY3RlZENhcmRJZCA9IGRhdGEuX2lkO1xuICAgIG9wZW5EZWxldGVNb2RhbChjYXJkRWxlbWVudCwgZGF0YS5faWQpO1xuICB9KTtcblxuICBjYXJkSW1hZ2VFbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIHByZXZpZXdJbWFnZUVsLnNyYyA9IGRhdGEubGluaztcbiAgICBwcmV2aWV3SW1hZ2VFbC5hbHQgPSBkYXRhLm5hbWU7XG4gICAgcHJldmlld0NhcHRpb25FbC50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcbiAgICBvcGVuTW9kYWwocHJldmlld01vZGFsKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGNhcmRFbGVtZW50O1xufVxuXG5mdW5jdGlvbiByZW5kZXJDYXJkKGl0ZW0sIG1ldGhvZCA9IFwicHJlcGVuZFwiKSB7XG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gZ2V0Q2FyZEVsZW1lbnQoaXRlbSk7XG4gIGNhcmRzTGlzdFttZXRob2RdKGNhcmRFbGVtZW50KTtcbn1cblxuZnVuY3Rpb24gb3Blbk1vZGFsKG1vZGFsKSB7XG4gIG1vZGFsLmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9pcy1vcGVuZWRcIik7XG5cbiAgZnVuY3Rpb24gaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIGNsb3NlTW9kYWwobW9kYWwpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlT3ZlcmxheUNsb3NlKGV2dCkge1xuICAgIGlmIChldnQudGFyZ2V0ID09PSBtb2RhbCkgY2xvc2VNb2RhbChtb2RhbCk7XG4gIH1cblxuICBtb2RhbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaGFuZGxlT3ZlcmxheUNsb3NlKTtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlRXNjQ2xvc2UpO1xuXG4gIG1vZGFsLl9lc2NIYW5kbGVyID0gaGFuZGxlRXNjQ2xvc2U7XG4gIG1vZGFsLl9vdmVybGF5SGFuZGxlciA9IGhhbmRsZU92ZXJsYXlDbG9zZTtcbn1cblxuZnVuY3Rpb24gY2xvc2VNb2RhbChtb2RhbCkge1xuICBtb2RhbC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfaXMtb3BlbmVkXCIpO1xuXG4gIGNvbnN0IGZvcm0gPSBtb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xuICBpZiAoZm9ybSkge1xuICAgIHJlc2V0Rm9ybVZhbGlkYXRpb24oZm9ybSwgdmFsaWRhdGlvbkNvbmZpZyk7XG4gIH1cblxuICBpZiAobW9kYWwuX2VzY0hhbmRsZXIpXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgbW9kYWwuX2VzY0hhbmRsZXIpO1xuICBpZiAobW9kYWwuX292ZXJsYXlIYW5kbGVyKVxuICAgIG1vZGFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBtb2RhbC5fb3ZlcmxheUhhbmRsZXIpO1xufVxuXG5mdW5jdGlvbiBvcGVuRGVsZXRlTW9kYWwoY2FyZEVsZW1lbnQsIGNhcmRJZCkge1xuICBvcGVuTW9kYWwoZGVsZXRlTW9kYWwpO1xuXG4gIGNvbnN0IGRlbGV0ZVN1Ym1pdEJ1dHRvbiA9IGRlbGV0ZUZvcm0ucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fc3VibWl0LWJ1dHRvblwiKTtcblxuICBjb25zdCBoYW5kbGVEZWxldGUgPSAoZXZ0KSA9PiB7XG4gICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgZGVsZXRlU3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gXCJEZWxldGluZy4uLlwiO1xuXG4gICAgYXBpXG4gICAgICAuZGVsZXRlQ2FyZChjYXJkSWQpXG4gICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIGNhcmRFbGVtZW50LnJlbW92ZSgpO1xuICAgICAgICBjbG9zZU1vZGFsKGRlbGV0ZU1vZGFsKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgZGVsZXRlU3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gXCJEZWxldGVcIjtcbiAgICAgICAgZGVsZXRlRm9ybS5yZW1vdmVFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGhhbmRsZURlbGV0ZSk7XG4gICAgICB9KTtcbiAgfTtcblxuICBkZWxldGVGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgaGFuZGxlRGVsZXRlLCB7IG9uY2U6IHRydWUgfSk7XG5cbiAgZGVsZXRlTW9kYWxcbiAgICAucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2FuY2VsLWJ1dHRvblwiKVxuICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgY2xvc2VNb2RhbChkZWxldGVNb2RhbCk7XG4gICAgfSk7XG59XG5cbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2Nsb3NlLWJ1dHRvblwiKS5mb3JFYWNoKChidXR0b24pID0+IHtcbiAgY29uc3QgcG9wdXAgPSBidXR0b24uY2xvc2VzdChcIi5tb2RhbFwiKTtcbiAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBjbG9zZU1vZGFsKHBvcHVwKSk7XG59KTtcblxuZWRpdFByb2ZpbGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgZWRpdFByb2ZpbGVOYW1lSW5wdXQudmFsdWUgPSBwcm9maWxlTmFtZUVsLnRleHRDb250ZW50O1xuICBlZGl0UHJvZmlsZURlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSBwcm9maWxlRGVzY3JpcHRpb25FbC50ZXh0Q29udGVudDtcbiAgb3Blbk1vZGFsKGVkaXRQcm9maWxlTW9kYWwpO1xufSk7XG5cbmVkaXRQcm9maWxlRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gIGFwaVxuICAgIC5lZGl0VXNlckluZm8oe1xuICAgICAgbmFtZTogZWRpdFByb2ZpbGVOYW1lSW5wdXQudmFsdWUsXG4gICAgICBhYm91dDogZWRpdFByb2ZpbGVEZXNjcmlwdGlvbklucHV0LnZhbHVlLFxuICAgIH0pXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgIHByb2ZpbGVOYW1lRWwudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG4gICAgICBwcm9maWxlRGVzY3JpcHRpb25FbC50ZXh0Q29udGVudCA9IGRhdGEuYWJvdXQ7XG4gICAgICBjbG9zZU1vZGFsKGVkaXRQcm9maWxlTW9kYWwpO1xuICAgIH0pXG4gICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xufSk7XG5cbmF2YXRhck1vZGFsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIG9wZW5Nb2RhbChhdmF0YXJNb2RhbCk7XG59KTtcblxuYXZhdGFyRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGhhbmRsZUF2YXRhclN1Ym1pdCk7XG5mdW5jdGlvbiBoYW5kbGVBdmF0YXJTdWJtaXQoZXZ0KSB7XG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICBjb25zdCBzYXZlQnV0dG9uID0gYXZhdGFyRm9ybS5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19zdWJtaXQtYnV0dG9uXCIpO1xuICBzYXZlQnV0dG9uLnRleHRDb250ZW50ID0gXCJTYXZpbmcuLi5cIjtcblxuICBhcGlcbiAgICAuZWRpdEF2YXRhckluZm8oYXZhdGFySW5wdXQudmFsdWUpXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgIGF2YXRhckltYWdlRWwuc3JjID0gZGF0YS5hdmF0YXI7XG4gICAgICBhdmF0YXJJbWFnZUVsLmFsdCA9IGRhdGEubmFtZTtcbiAgICAgIGNsb3NlTW9kYWwoYXZhdGFyTW9kYWwpO1xuICAgIH0pXG4gICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgc2F2ZUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiU2F2ZVwiO1xuICAgIH0pO1xufVxuXG5uZXdQb3N0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBvcGVuTW9kYWwobmV3UG9zdE1vZGFsKSk7XG5uZXdQb3N0Rm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgY29uc3Qgc2F2ZUJ1dHRvbiA9IG5ld1Bvc3RGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3N1Ym1pdC1idXR0b25cIik7XG4gIHNhdmVCdXR0b24udGV4dENvbnRlbnQgPSBcIlNhdmluZy4uLlwiO1xuXG4gIGNvbnN0IGNhcmREYXRhID0ge1xuICAgIG5hbWU6IG5ld1Bvc3REZXNjcmlwdGlvbklucHV0LnZhbHVlLFxuICAgIGxpbms6IG5ld1Bvc3RUaXRsZUlucHV0LnZhbHVlLFxuICB9O1xuXG4gIGFwaVxuICAgIC5hZGRDYXJkKGNhcmREYXRhKVxuICAgIC50aGVuKChuZXdDYXJkKSA9PiB7XG4gICAgICByZW5kZXJDYXJkKG5ld0NhcmQsIFwicHJlcGVuZFwiKTtcbiAgICAgIHJlc2V0Rm9ybVZhbGlkYXRpb24obmV3UG9zdEZvcm0sIHZhbGlkYXRpb25Db25maWcpO1xuICAgICAgY2xvc2VNb2RhbChuZXdQb3N0TW9kYWwpO1xuICAgIH0pXG4gICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgc2F2ZUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiU2F2ZVwiO1xuICAgIH0pO1xufSk7XG5cbmVuYWJsZVZhbGlkYXRpb24odmFsaWRhdGlvbkNvbmZpZyk7XG4iLCJjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGhlYWRlcnMgfSkge1xuICAgIHRoaXMuX2Jhc2VVcmwgPSBiYXNlVXJsO1xuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xuICB9XG5cbiAgZ2V0QXBwSW5mbygpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3RoaXMuZ2V0SW5pdGlhbENhcmRzKCksIHRoaXMuZ2V0VXNlckluZm8oKV0pO1xuICB9XG5cbiAgYWRkQ2FyZCh7IG5hbWUsIGxpbmsgfSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBsaW5rLFxuICAgICAgfSksXG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSk7XG4gIH1cblxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8vIFRPRE8gLSBpbXBsZW1lbnQgUE9TVCAvY2FyZHNcblxuICBlZGl0VXNlckluZm8oeyBuYW1lLCBhYm91dCB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBhYm91dCxcbiAgICAgIH0pLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KTtcbiAgfVxuXG4gIGVkaXRBdmF0YXJJbmZvKGF2YXRhcikge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhcixcbiAgICAgIH0pLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG5cbiAgZGVsZXRlQ2FyZChpZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2lkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSk7XG4gIH1cblxuICBsaWtlQ2FyZChjYXJkSWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KTtcbiAgfVxuXG4gIHVubGlrZUNhcmQoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQXBpO1xuIl0sIm5hbWVzIjpbInZhbGlkYXRpb25Db25maWciLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImhpZGVJbnB1dEVycm9yIiwiZm9ybUVsZW1lbnQiLCJpbnB1dEVsZW1lbnQiLCJjb25maWciLCJxdWVyeVNlbGVjdG9yIiwiaWQiLCJ0ZXh0Q29udGVudCIsImNsYXNzTGlzdCIsInJlbW92ZSIsInRvZ2dsZUJ1dHRvblN0YXRlIiwiaW5wdXRMaXN0IiwiYnV0dG9uRWxlbWVudCIsInNvbWUiLCJpbnB1dCIsInZhbGlkaXR5IiwidmFsaWQiLCJoYXNJbnZhbGlkSW5wdXQiLCJkaXNhYmxlQnV0dG9uIiwiZW5hYmxlQnV0dG9uIiwiYWRkIiwiZGlzYWJsZWQiLCJyZXNldEZvcm1WYWxpZGF0aW9uIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJhcGkiLCJjb25zdHJ1Y3RvciIsImJhc2VVcmwiLCJoZWFkZXJzIiwidGhpcyIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJnZXRBcHBJbmZvIiwiUHJvbWlzZSIsImFsbCIsImdldEluaXRpYWxDYXJkcyIsImdldFVzZXJJbmZvIiwiYWRkQ2FyZCIsIm5hbWUiLCJsaW5rIiwiZmV0Y2giLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJyZWplY3QiLCJzdGF0dXMiLCJlZGl0VXNlckluZm8iLCJhYm91dCIsImVkaXRBdmF0YXJJbmZvIiwiYXZhdGFyIiwiZGVsZXRlQ2FyZCIsImxpa2VDYXJkIiwiY2FyZElkIiwidW5saWtlQ2FyZCIsImF1dGhvcml6YXRpb24iLCJlZGl0UHJvZmlsZUJ1dHRvbiIsImRvY3VtZW50IiwiZWRpdFByb2ZpbGVNb2RhbCIsImVkaXRQcm9maWxlRm9ybSIsImZvcm1zIiwiZWRpdFByb2ZpbGVOYW1lSW5wdXQiLCJlZGl0UHJvZmlsZURlc2NyaXB0aW9uSW5wdXQiLCJhdmF0YXJNb2RhbCIsImF2YXRhckZvcm0iLCJhdmF0YXJJbnB1dCIsImF2YXRhckltYWdlRWwiLCJhdmF0YXJNb2RhbEJ1dHRvbiIsImRlbGV0ZU1vZGFsIiwiZGVsZXRlRm9ybSIsIm5ld1Bvc3RCdXR0b24iLCJuZXdQb3N0TW9kYWwiLCJuZXdQb3N0Rm9ybSIsIm5ld1Bvc3RUaXRsZUlucHV0IiwibmV3UG9zdERlc2NyaXB0aW9uSW5wdXQiLCJwcm9maWxlTmFtZUVsIiwicHJvZmlsZURlc2NyaXB0aW9uRWwiLCJwcmV2aWV3TW9kYWwiLCJwcmV2aWV3SW1hZ2VFbCIsInByZXZpZXdDYXB0aW9uRWwiLCJjYXJkVGVtcGxhdGUiLCJjb250ZW50IiwiY2FyZHNMaXN0Iiwic2VsZWN0ZWRDYXJkIiwic2VsZWN0ZWRDYXJkSWQiLCJyZW5kZXJDYXJkIiwiaXRlbSIsImNhcmRFbGVtZW50IiwiZGF0YSIsImNsb25lTm9kZSIsImNhcmRUaXRsZUVsIiwiY2FyZEltYWdlRWwiLCJsaWtlQnV0dG9uIiwiZGVsZXRlQnV0dG9uIiwic3JjIiwiYWx0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNvbnRhaW5zIiwiX2lkIiwidXBkYXRlZENhcmQiLCJjYXRjaCIsImNvbnNvbGUiLCJlcnJvciIsIm9wZW5Nb2RhbCIsImRlbGV0ZVN1Ym1pdEJ1dHRvbiIsImhhbmRsZURlbGV0ZSIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiY2xvc2VNb2RhbCIsImZpbmFsbHkiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwib25jZSIsIm9wZW5EZWxldGVNb2RhbCIsImdldENhcmRFbGVtZW50IiwibW9kYWwiLCJoYW5kbGVFc2NDbG9zZSIsImtleSIsImhhbmRsZU92ZXJsYXlDbG9zZSIsInRhcmdldCIsIl9lc2NIYW5kbGVyIiwiX292ZXJsYXlIYW5kbGVyIiwiZm9ybSIsImNhcmRzIiwidXNlckluZm8iLCJidXR0b24iLCJwb3B1cCIsImNsb3Nlc3QiLCJ2YWx1ZSIsInNhdmVCdXR0b24iLCJjYXJkRGF0YSIsIm5ld0NhcmQiLCJzZXRFdmVudExpc3RlbmVycyIsImNoZWNrSW5wdXRWYWxpZGl0eSIsInNob3dJbnB1dEVycm9yIiwiZXJyb3JNZXNzYWdlIiwidmFsaWRhdGlvbk1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9